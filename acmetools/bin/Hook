#!/bin/sh

set -e
set -x

if [ "$1" = "-h" ] && [ "$2" = "" ]; then
	p=`basename $0`
	cat <<EOF
NAME
	$p

SYNOPSYS
	$p [-h]

DESCRIPTION
	$p registers a single hook \$HOME/acme.hook to
	all existing buffers, and to all buffers about
	to future buffer.

	win(1) buffers are systematically ignored.

BUGS
	In the original version, the idea was to have a central script
	acting as a hook, that could eventually delegate things to
	other scripts in case there's a need for finer filtering.

	For now, the script only executes one-time actions when files
	are opened, and doesn't listen to events.

EOF
	exit 0
fi

hook=$HOME/acme.hook

# Nothing to hook.
if [ ! -x $HOME/acme.hook ]; then
	exit 0
fi

# Run hooks for all existing windows
9p read acme/index | awk '{print $1}' | while read id; do
	if ! Iswin $id; then
		sh $hook $id &
	fi
done

# Run hooks for newly created windows
9p read acme/log | while read e; do
	window_id="$(cut -d' ' -f1 <<< "${e}")"
	type="$(cut -d' ' -f2 <<< "${e}")"
    [[ "${type}" != "new" ]] && continue
    Iswin "${window_id}" || "${hook}" "${window_id}"
done
